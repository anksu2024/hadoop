package com.cloudwick.hadoop.TableJoin;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.MultipleInputs;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.w3c.dom.Text;

public class TableJoinDriver extends Configured implements Tool {
	private Log LOG = LogFactory.getLog(TableJoinDriver.class);
	
	public int run(String[] args) throws Exception {
		if (args.length != 3) {
			System.out.printf("Usage: %s [generic options] "
					+ "<Input Path 1> <Input Path 2> <output Directory>\n",
					getClass().getSimpleName());
			return -1;
		}

		LOG.info("$$-DRIVER:Set Path");
		Path firstPath = new Path(args[0]);
		Path secondPath = new Path(args[1]);
		Path thirdPath = new Path(args[2]);
		
		LOG.info("$$-DRIVER:Job Start");
		Job job = new Job(getConf(), "multiple");
		job.setJarByClass(TableJoinDriver.class);
		job.setJobName("Table Join");

		LOG.info("$$-DRIVER:Reducer");
		// Reducer details
		job.setReducerClass(TableJoinReducer.class);
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(Text.class);

		LOG.info("$$-DRIVER:Mapper Output");
		// Mapper Details
		// job.setMapperClass(TableJoinMapper.class);
		job.setMapOutputKeyClass(IntWritable.class);
		job.setMapOutputValueClass(Text.class);

		LOG.info("$$-DRIVER:Multipath");
		// Using Multipaths Mapper for processing input
		MultipleInputs.addInputPath(job, firstPath, TextInputFormat.class,
				TableJoinMapperEmp.class);
		MultipleInputs.addInputPath(job, secondPath, TextInputFormat.class,
				TableJoinMapperDept.class);

		LOG.info("$$-DRIVER:FileOutputFormat");
		// Configuration of Output paths on HDFS
		//FileInputFormat.setInputPaths(job, firstPath, secondPath);
		FileOutputFormat.setOutputPath(job, thirdPath);
		
		LOG.info("$$-DRIVER:Job Wait");
		// Wait for job completion
		job.waitForCompletion(true);
		
		return 0;
	}

	public static void main(String... args) throws Exception {
		int exitCode = ToolRunner.run(new TableJoinDriver(), args);
		System.exit(exitCode);
	}
}